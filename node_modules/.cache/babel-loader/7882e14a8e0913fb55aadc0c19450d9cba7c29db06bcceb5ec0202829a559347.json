{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pijus\\\\Desktop\\\\Projektinis\\\\Mumis\\\\react-app\\\\src\\\\pages\\\\taskPage\\\\DailyList.jsx\",\n  _s = $RefreshSig$();\n//Assets\nimport DashWithStar from \"../../img/DashWithStar.svg\";\nimport { motion, useAnimationControls, useEffect } from \"framer-motion\";\nimport { useState } from 'react';\n\n//Daily Tasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Daily(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Daily\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DAILY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DailyList\",\n      children: [props.array.map((item, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n        isDone: item.isDone,\n        taskString: item.taskString,\n        taskTime: item.taskTime,\n        index: index,\n        array: props.array\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: DashWithStar,\n        className: \"DashWithStar\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = Daily;\nfunction TaskItem(props) {\n  _s();\n  const controls = useAnimationControls();\n  const [checkSymbol, updateSymbol] = useState(props.array[props.index].isDone ? 'V' : '-');\n  function markCheck() {\n    if (props.array[props.index].isDone === true) {\n      props.array[props.index].isDone = false;\n      updateSymbol(\"—\");\n      controls.start({\n        filter: \"blur(0px)\"\n      });\n    } else {\n      props.array[props.index].isDone = true;\n      updateSymbol(\"V\");\n      controls.start({\n        filter: \"blur(5px)\"\n      });\n    }\n    localStorage.setItem(\"Daily\", JSON.stringify(props.array));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DailyItem\",\n    children: [/*#__PURE__*/_jsxDEV(motion.button, {\n      className: \"Checkmark\",\n      whileHover: {\n        scale: 1.1\n      },\n      whileTap: {\n        scale: 0\n      },\n      onClick: markCheck,\n      children: checkSymbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.p, {\n      animate: controls,\n      children: props.taskString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskItem, \"tMJCi26xP5GiGA4cZ2ilG9XZls4=\", false, function () {\n  return [useAnimationControls];\n});\n_c2 = TaskItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"Daily\");\n$RefreshReg$(_c2, \"TaskItem\");","map":{"version":3,"names":["DashWithStar","motion","useAnimationControls","useEffect","useState","jsxDEV","_jsxDEV","Daily","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","array","map","item","index","TaskItem","isDone","taskString","taskTime","src","alt","_c","_s","controls","checkSymbol","updateSymbol","markCheck","start","filter","localStorage","setItem","JSON","stringify","button","whileHover","scale","whileTap","onClick","p","animate","_c2","$RefreshReg$"],"sources":["C:/Users/Pijus/Desktop/Projektinis/Mumis/react-app/src/pages/taskPage/DailyList.jsx"],"sourcesContent":["//Assets\r\nimport DashWithStar from \"../../img/DashWithStar.svg\";\r\nimport {motion, useAnimationControls, useEffect} from \"framer-motion\";\r\nimport {useState} from 'react';\r\n\r\n//Daily Tasks\r\nexport default function Daily(props){\r\n    return(\r\n        <div className='Daily'>\r\n                <h1>DAILY</h1>\r\n\r\n                <div className='DailyList'>\r\n                    {(props.array).map((item, index) => \r\n                        <TaskItem isDone={item.isDone} taskString={item.taskString} taskTime={item.taskTime} key={index} index={index} array={props.array}/>    \r\n                    )}\r\n\r\n                    <img src={DashWithStar} className='DashWithStar' alt=\"\"/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TaskItem(props){\r\n    const controls = useAnimationControls();\r\n\r\n    const [checkSymbol, updateSymbol] = useState(props.array[props.index].isDone ? 'V' : '-');\r\n\r\n    function markCheck(){\r\n        if(props.array[props.index].isDone === true){\r\n            props.array[props.index].isDone = false;\r\n            updateSymbol(\"—\");\r\n            controls.start({filter: \"blur(0px)\"})\r\n        }\r\n        else{\r\n            props.array[props.index].isDone = true;\r\n            updateSymbol(\"V\");\r\n            controls.start({filter: \"blur(5px)\"})\r\n        }\r\n        localStorage.setItem(\"Daily\", JSON.stringify(props.array));\r\n    }\r\n\r\n    return(\r\n        <div className=\"DailyItem\">\r\n            <motion.button className=\"Checkmark\" whileHover={{scale:1.1}} whileTap={{scale:0}} onClick={markCheck}>{checkSymbol}</motion.button>\r\n            <motion.p animate={controls}>{props.taskString}</motion.p>\r\n        </div>\r\n            \r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}