{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pijus\\\\Desktop\\\\Projektinis\\\\Mumis\\\\react-app\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\n//MODULES\nimport { useState, useRef, useEffect } from 'react';\nimport runCompletion from '../modules/ChatGPT.js';\nimport './Chat.css';\n\n//ASSETS\nimport Thinking from '../img/Thinking.svg';\nimport UserBubble from '../img/user-bubble.svg';\nimport MumisBubble from '../img/mumis-bubble.png';\nimport Star from '../img/Star.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //CHAT\n  const [input, setInput] = useState(\"\");\n  const [iDisabled, setiDisabled] = useState(false);\n  const [chatLog, setChatLog] = useState([{\n    txt: \"What's up?\",\n    img: MumisBubble\n  }]);\n  const [ThinkingStatus, SetThinking] = useState(\"thinking-off\");\n  const [ButtonState, SetButtonState] = useState(\"btn\");\n\n  //CHAT TO BOTTOM\n  const bottomRef = useRef(null);\n  useEffect(() => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [chatLog]);\n  function clearLog() {\n    setChatLog([{\n      txt: \"What's up?\",\n      img: MumisBubble\n    }]);\n  }\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setChatLog([...chatLog, {\n      txt: `${input}`,\n      img: UserBubble\n    }]);\n    setInput(\"\");\n    setiDisabled(true);\n    SetButtonState(\"disabled\");\n    SetThinking(\"thinking-on\");\n    var output = await runCompletion(input);\n    SetThinking(\"thinking-off\");\n    SetButtonState(\"btn\");\n    setiDisabled(false);\n    setChatLog([...chatLog, {\n      txt: `${input}`,\n      img: UserBubble\n    }, {\n      txt: `${output}`,\n      img: MumisBubble\n    }]);\n  }\n\n  //TIME\n  let today = new Date();\n  const [CurrentTime, SetTime] = useState(today.getHours() + \":\" + today.getMinutes());\n  const UpdateTime = () => {\n    SetTime(today.getHours() + \"✦\" + today.getMinutes());\n  };\n  setInterval(UpdateTime, 1000);\n\n  //FORMATTING\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: clearLog,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u21A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Let's Chat!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: CurrentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatField\",\n      children: [chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(Textline, {\n        name: message.name,\n        img: message.img,\n        txt: message.txt\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: bottomRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ChatBox\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => {\n          setInput(e.target.value);\n        },\n        required: true,\n        disabled: iDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: ButtonState,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Star,\n          alt: \"Send\",\n          className: \"ButtonStar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Thinking,\n      className: ThinkingStatus,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"79zS2R0E+QurfHLtDSnH7D1jJ/4=\");\n_c = App;\nconst Textline = ({\n  img,\n  txt\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chatline\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatlineText\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: txt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n};\n_c2 = Textline;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Textline\");","map":{"version":3,"names":["useState","useRef","useEffect","runCompletion","Thinking","UserBubble","MumisBubble","Star","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","input","setInput","iDisabled","setiDisabled","chatLog","setChatLog","txt","img","ThinkingStatus","SetThinking","ButtonState","SetButtonState","bottomRef","_bottomRef$current","current","scrollIntoView","behavior","clearLog","handleSubmit","event","preventDefault","output","today","Date","CurrentTime","SetTime","getHours","getMinutes","UpdateTime","setInterval","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","Textline","name","ref","onSubmit","value","onChange","e","target","required","disabled","autoFocus","type","src","alt","_c","_c2","$RefreshReg$"],"sources":["C:/Users/Pijus/Desktop/Projektinis/Mumis/react-app/src/pages/Chat.js"],"sourcesContent":["//MODULES\nimport { useState, useRef, useEffect } from 'react';\nimport runCompletion from '../modules/ChatGPT.js';\nimport './Chat.css';\n\n//ASSETS\nimport Thinking from '../img/Thinking.svg';\nimport UserBubble from '../img/user-bubble.svg';\nimport MumisBubble from '../img/mumis-bubble.png';\nimport Star from '../img/Star.svg'; \n\n\nfunction App() {\n  //CHAT\n  const [input, setInput] = useState(\"\");\n  const [iDisabled, setiDisabled] = useState(false);\n  const [chatLog, setChatLog] = useState([{txt: \"What's up?\", img: MumisBubble}]);\n  const [ThinkingStatus, SetThinking] = useState(\"thinking-off\");\n  const [ButtonState, SetButtonState] = useState(\"btn\");\n\n  //CHAT TO BOTTOM\n  const bottomRef = useRef(null);\n  useEffect(() => {bottomRef.current?.scrollIntoView({behavior: 'smooth'})}, [chatLog]);\n\n  function clearLog(){\n    setChatLog([{txt: \"What's up?\", img: MumisBubble}]);\n  }\n  async function handleSubmit(event){\n    event.preventDefault()\n    setChatLog([...chatLog, {txt:`${input}`, img:UserBubble}])\n    setInput(\"\")\n    setiDisabled(true);\n    SetButtonState(\"disabled\");\n    SetThinking(\"thinking-on\");\n    var output = await runCompletion(input);\n    SetThinking(\"thinking-off\");\n    SetButtonState(\"btn\");\n    setiDisabled(false);\n    setChatLog([...chatLog, {txt:`${input}`, img:UserBubble}, {txt:`${output}`, img:MumisBubble}])\n  }\n\n  //TIME\n  let today = new Date();\n  const [CurrentTime, SetTime] = useState(today.getHours() + \":\" + today.getMinutes());\n  const UpdateTime = () => {\n    SetTime(today.getHours() + \"✦\" + today.getMinutes())\n  }\n  setInterval(UpdateTime, 1000);\n\n  //FORMATTING\n  return (\n    <>\n      <div className='Header'>\n        <button className='back-button' onClick={clearLog}><h2>↩</h2></button>\n        <h1>Let's Chat!</h1>\n        <p>{CurrentTime}</p>\n      </div>\n\n      <div className='ChatField'>\n        {chatLog.map((message, index) => (\n          <Textline name={message.name} img={message.img} txt={message.txt} key={index}/>\n        ))}\n        <div ref={bottomRef}/>\n      </div>\n\n      <form className='ChatBox' onSubmit={handleSubmit}>\n        <input \n          value={input}\n          onChange={(e) => {setInput(e.target.value)}}\n          required\n          disabled = {iDisabled}\n          autoFocus\n        />\n        <button type=\"submit\" className={ButtonState}>\n          <img src={Star} alt=\"Send\" className='ButtonStar'/>\n        </button>\n      </form>\n\n      <img src={Thinking} className={ThinkingStatus} alt=\"\"/>\n  </>\n  )\n}\n\nconst Textline = ({img, txt}) => {\n  return (\n      <div className=\"Chatline\">\n          <img src={img} alt=\"\"/>\n          <div className='ChatlineText'>\n            <p>{txt}</p>\n          </div>\n          \n      </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}