{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pijus\\\\Desktop\\\\Projektinis\\\\Mumis\\\\react-app\\\\src\\\\pages\\\\taskPage\\\\SettingsModal.jsx\",\n  _s = $RefreshSig$();\n//Modules\nimport { useState } from 'react';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SettingsModal(props) {\n  _s();\n  const [input, updateInput] = useState('');\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"Backdrop\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SettingsModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your task list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalTypes\",\n        children: [/*#__PURE__*/_jsxDEV(motion.button, {\n          whileTap: {\n            scale: 0.9\n          },\n          className: \"modalButtonInactive\",\n          children: \"Daily\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          whileTap: {\n            scale: 0.9\n          },\n          className: \"modalButtonInactive\",\n          children: \"Weekly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modalTaskList\",\n        children: props.dailyArray.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(motion.button, {\n            whileHover: {\n              scale: 1.1\n            },\n            className: \"x\",\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.taskString\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)]\n        }, 'taskString', true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalInputTask\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"ADD NEW TASK\",\n          onChange: I => updateInput(I.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          children: \"\\u2726\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(SettingsModal, \"XutVUpR+TU1/kPtQ0zYj2/5FAUE=\");\n_c = SettingsModal;\nvar _c;\n$RefreshReg$(_c, \"SettingsModal\");","map":{"version":3,"names":["useState","motion","AnimatePresence","jsxDEV","_jsxDEV","SettingsModal","props","_s","input","updateInput","div","className","initial","opacity","animate","exit","children","fileName","_jsxFileName","lineNumber","columnNumber","button","whileTap","scale","dailyArray","map","item","whileHover","taskString","placeholder","onChange","I","target","value","_c","$RefreshReg$"],"sources":["C:/Users/Pijus/Desktop/Projektinis/Mumis/react-app/src/pages/taskPage/SettingsModal.jsx"],"sourcesContent":["//Modules\r\nimport { useState } from 'react';\r\nimport {motion, AnimatePresence} from \"framer-motion\";\r\n\r\nexport default function SettingsModal(props){\r\n    const [input, updateInput] = useState('');\r\n\r\n\r\n    return(\r\n        <motion.div className='Backdrop'\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n        >\r\n            <div className='SettingsModal'>\r\n                <h2>Your task list</h2>\r\n                <div className='modalTypes'>\r\n                    <motion.button whileTap={{scale:0.9}} className='modalButtonInactive'>Daily</motion.button>\r\n                    <motion.button whileTap={{scale:0.9}} className='modalButtonInactive'>Weekly</motion.button>\r\n                </div>\r\n                \r\n                <section className='modalTaskList'>\r\n                    {props.dailyArray.map((item) =>\r\n                        <div key='taskString'>\r\n                            <motion.button whileHover={{scale:1.1}} className='x'>✖</motion.button>\r\n                            <p>{item.taskString}</p>\r\n                        </div>\r\n                    )}\r\n                </section>\r\n\r\n                <form className='modalInputTask'>\r\n                    <input placeholder='ADD NEW TASK' onChange={I => updateInput(I.target.value)}/>\r\n                    <motion.button>✦</motion.button>\r\n                </form>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}